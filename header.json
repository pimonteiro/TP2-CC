# primeira mensagem cliente -> servidor (1)
{
    "header" : {
        "checksum" : "",
        "type" : "",
        "nsequence" : "",
        "size" : "" #(cabeçalho + payload)
    },

    "payload" : {
        "username" : "",
        "password" : "",
        "action" : "",
        "filename" : ""
    }
}

# mensagem cliente -> servidor (recebeu numero de segmentos) (2)
{
    "header" : {
        "checksum" : "",
        "type" : "ACK",
        "nsequence" : "",
        "size" : "" #(cabeçalho + payload)
    }
}

# mensagens servidor -> cliente com dados (3)
{
    "header" : {
        "checksum" : "",
        "type" : "", #no caso do ultimo segmento vai um FIN
        "nsequence" : "",
        "size" : "" #(cabeçalho + payload)
    },

    "payload" : "data"
}

# primeira mensagem servidor -> cliente (4)
{
    "header" : {
        "checksum" : "",
        "type" : "",
        "nsequence" : "",
        "size" : "" #(cabeçalho + payload)
    },

    "payload" : {
        "total_segments" : ""
    }
}

# mensagem cliente -> servidor (missing) (5)
{
    "header" : {
        "checksum" : "",
        "type" : "",
        "nsequence" : "",
        "size" : "" #(cabeçalho + payload)
    },

    "payload" : {
        "missing" : []
    }
}

# utima mensagem cliente -> servidor (6)
{
    "header" : {
        "checksum" : "",
        "type" : "FIN",
        "nsequence" : "",
        "size" : "" #(cabeçalho + payload)
    }
}



{ "header" : {}, "payload" : {"filename" : "CG_TP-master.zip" }}